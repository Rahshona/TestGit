# ООП - это шаблон, скетч, оболочка без полного своего содержимого
#Класс - план. содержит в себе все необходимые элементы для создания необходимого устройства
#пример создания класса:
class Primer:
    pass
#Есть специальный метод __init__ с помощью которого создаются необходимые атрибуты для объекта класса
class Car:
def __init__(self, model, color, year):
self.model = model
self.color = color
self.year = year
#Класс может содержать в себе методы. Но там просто будет селф(т.е.объект), к которому он прикован. В остальном все то же самое как в функциях
# Только функции находятся во внешке, а функция в классе просто будет называться методом.
class Car: #Название класса
    def __init__(self, model, color, year):  #Атрибуты класса
    self.model = model
    self.color = color
    self.year = year
    def stop(self):                #Методы класса
    print('Машина остановилась')
    def change_color(self, new_color):
    self.color = new_color
#Даем объект классу и используем методы, заготовки для получения более менее целого объекта, который может выполнять действия
gentra = Car('Ravon', 'Black', 2022) # Сначала создал экземпляр машины
gentra.change_color('White') # Решил покрасить машину в белый цвет
gentra.color
#
#
#
#
#
#